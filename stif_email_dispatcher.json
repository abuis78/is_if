{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_2_to_port_3",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "3",
                    "targetPort": "3_in"
                },
                {
                    "id": "port_3_to_port_4",
                    "sourceNode": "3",
                    "sourcePort": "3_out",
                    "targetNode": "4",
                    "targetPort": "4_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_4_to_port_5",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "5",
                    "targetPort": "5_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_4_to_port_6",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "6",
                    "targetPort": "6_in"
                },
                {
                    "id": "port_0_to_port_7",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "7",
                    "targetPort": "7_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_7_to_port_8",
                    "sourceNode": "7",
                    "sourcePort": "7_out",
                    "targetNode": "8",
                    "targetPort": "8_in"
                },
                {
                    "id": "port_5_to_port_10",
                    "sourceNode": "5",
                    "sourcePort": "5_out",
                    "targetNode": "10",
                    "targetPort": "10_in"
                },
                {
                    "id": "port_10_to_port_11",
                    "sourceNode": "10",
                    "sourcePort": "10_out",
                    "targetNode": "11",
                    "targetPort": "11_in"
                },
                {
                    "id": "port_6_to_port_13",
                    "sourceNode": "6",
                    "sourcePort": "6_out",
                    "targetNode": "13",
                    "targetPort": "13_in"
                },
                {
                    "id": "port_9_to_port_14",
                    "sourceNode": "9",
                    "sourcePort": "9_out",
                    "targetNode": "14",
                    "targetPort": "14_in"
                },
                {
                    "id": "port_14_to_port_15",
                    "sourceNode": "14",
                    "sourcePort": "14_out",
                    "targetNode": "15",
                    "targetPort": "15_in"
                },
                {
                    "id": "port_13_to_port_16",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "16",
                    "targetPort": "16_in"
                },
                {
                    "id": "port_11_to_port_17",
                    "sourceNode": "11",
                    "sourcePort": "11_out",
                    "targetNode": "17",
                    "targetPort": "17_in"
                },
                {
                    "id": "port_17_to_port_19",
                    "sourceNode": "17",
                    "sourcePort": "17_out",
                    "targetNode": "19",
                    "targetPort": "19_in"
                },
                {
                    "id": "port_19_to_port_9",
                    "sourceNode": "19",
                    "sourcePort": "19_out",
                    "targetNode": "9",
                    "targetPort": "9_in"
                },
                {
                    "id": "port_15_to_port_20",
                    "sourceNode": "15",
                    "sourcePort": "15_out",
                    "targetNode": "20",
                    "targetPort": "20_in"
                },
                {
                    "id": "port_20_to_port_1",
                    "sourceNode": "20",
                    "sourcePort": "20_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_8_to_port_21",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "21",
                    "targetPort": "21_in"
                },
                {
                    "id": "port_21_to_port_12",
                    "sourceNode": "21",
                    "sourcePort": "21_out",
                    "targetNode": "12",
                    "targetPort": "12_in"
                },
                {
                    "id": "port_12_to_port_22",
                    "sourceNode": "12",
                    "sourcePort": "12_out",
                    "targetNode": "22",
                    "targetPort": "22_in"
                },
                {
                    "id": "port_16_to_port_23",
                    "sourceNode": "16",
                    "sourcePort": "16_out",
                    "targetNode": "23",
                    "targetPort": "23_in"
                },
                {
                    "id": "port_25_to_port_1",
                    "sourceNode": "25",
                    "sourcePort": "25_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_22_to_port_26",
                    "sourceNode": "22",
                    "sourcePort": "22_out",
                    "targetNode": "26",
                    "targetPort": "26_in"
                },
                {
                    "id": "port_26_to_port_2",
                    "sourceNode": "26",
                    "sourcePort": "26_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_23_to_port_28",
                    "sourceNode": "23",
                    "sourcePort": "23_out",
                    "targetNode": "28",
                    "targetPort": "28_in"
                },
                {
                    "id": "port_28_to_port_25",
                    "sourceNode": "28",
                    "sourcePort": "28_out",
                    "targetNode": "25",
                    "targetPort": "25_in"
                }
            ],
            "hash": "b430e6baca47c41549996001083f24d922da8f40",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": 190,
                    "y": -1.2789769243681803e-13
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": 190,
                    "y": 3004
                },
                "10": {
                    "data": {
                        "advanced": {
                            "customName": "format json schema",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 3,
                        "functionName": "format_json_schema",
                        "id": "10",
                        "parameters": [],
                        "template": "{\n    \"schema\": {\n        \"title\": \"Archie Passwort\",\n        \"description\": \"\",\n        \"type\": \"object\",\n        \"required\": [\"password\"],\n        \"properties\": {\n            \"password\": {\"type\": \"string\", \"title\": \"password\", \"minumum\": 0, \"maximum\": 10}\n        }\n    }\n}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "10",
                    "type": "format",
                    "warnings": {},
                    "x": 0,
                    "y": 1756
                },
                "11": {
                    "data": {
                        "action": "create json prompt",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "create magic link",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "URL Prompt",
                        "connectorConfigs": [
                            "urlprompt"
                        ],
                        "connectorId": "709b9d9a-fa75-4ab1-95c1-474f65ba6c43",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "create_magic_link",
                        "id": "11",
                        "parameters": {
                            "schema": "format_json_schema:formatted_data"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "schema"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "11",
                    "type": "action",
                    "warnings": {},
                    "x": 0,
                    "y": 1904
                },
                "12": {
                    "data": {
                        "advanced": {
                            "customName": "extract email toEmail",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "regex_extract_email",
                            "repoName": "community"
                        },
                        "functionId": 4,
                        "functionName": "extract_email_toemail",
                        "id": "12",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "regex_extract_email": {
                                "description": "Provide a string with one or more email addresses in it to be extracted.\nCan be helpful with strings from the To or CC fields of an email: \"<other_email@domain.com>, 'Name' <e-mail@domain.com>\"",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "String containing email addresses",
                                        "inputType": "item",
                                        "label": "input_string",
                                        "name": "input_string",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "regex_extract_email",
                                "name": "regex_extract_email"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "regex_extract_email": {
                                "input_string": "filtered-data:filter_email_artifact:condition_1:artifact:*.cef.toEmail"
                            }
                        }
                    },
                    "errors": {},
                    "id": "12",
                    "type": "utility",
                    "warnings": {},
                    "x": 170,
                    "y": 640
                },
                "13": {
                    "data": {
                        "advanced": {
                            "customName": "email subject no action",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 4,
                        "functionName": "email_subject_no_action",
                        "id": "13",
                        "parameters": [
                            "container:id"
                        ],
                        "template": "[{0}] - Aktuelle \u00dcberpr\u00fcfung Ihres E-Mail-Anhangs \u2013 Status information",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "13",
                    "type": "format",
                    "warnings": {},
                    "x": 340,
                    "y": 2216
                },
                "14": {
                    "data": {
                        "advanced": {
                            "customName": "email subject action needed",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 5,
                        "functionName": "email_subject_action_needed",
                        "id": "14",
                        "parameters": [
                            "container:id"
                        ],
                        "template": "[{0}] - Aktuelle \u00dcberpr\u00fcfung Ihres E-Mail-Anhangs \u2013 Ihre Mitwirkung ist gefragt\n",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "14",
                    "type": "format",
                    "warnings": {},
                    "x": -1.4210854715202004e-14,
                    "y": 2536
                },
                "15": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "playbook_send_email_1",
                        "id": "15",
                        "inputs": {
                            "email_body": {
                                "datapaths": [
                                    "format_email_body_mit_passwort:formatted_data"
                                ],
                                "deduplicate": false
                            },
                            "email_recipient": {
                                "datapaths": [
                                    "exctract_email_fromemail:custom_function_result.data.*.email_address"
                                ],
                                "deduplicate": false
                            },
                            "email_subject": {
                                "datapaths": [
                                    "email_subject_action_needed:formatted_data"
                                ],
                                "deduplicate": false
                            }
                        },
                        "playbookName": "send_email",
                        "playbookRepo": 32,
                        "playbookRepoName": "is_if",
                        "playbookType": "data",
                        "synchronous": true,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "15",
                    "type": "playbook",
                    "warnings": {},
                    "x": 0,
                    "y": 2708
                },
                "16": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 2,
                        "functionName": "playbook_send_email_2",
                        "id": "16",
                        "inputs": {
                            "email_body": {
                                "datapaths": [
                                    "format_email_body_ohne_passwort:formatted_data"
                                ],
                                "deduplicate": false
                            },
                            "email_recipient": {
                                "datapaths": [
                                    "exctract_email_fromemail:custom_function_result.data.*.email_address"
                                ],
                                "deduplicate": false
                            },
                            "email_subject": {
                                "datapaths": [
                                    "email_subject_no_action:formatted_data"
                                ],
                                "deduplicate": false
                            }
                        },
                        "playbookName": "send_email",
                        "playbookRepo": 32,
                        "playbookRepoName": "is_if",
                        "playbookType": "data",
                        "synchronous": true,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "16",
                    "type": "playbook",
                    "warnings": {},
                    "x": 340,
                    "y": 2372
                },
                "17": {
                    "data": {
                        "advanced": {
                            "customName": "format JSON artifact create",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 6,
                        "functionName": "format_json_artifact_create",
                        "id": "17",
                        "parameters": [
                            "create_magic_link:action_result.data.*.web_url",
                            "create_magic_link:action_result.data.*.id"
                        ],
                        "template": "{{ \"cef\": {{ \"web_url\": \"{0}\", \"prompt_id\": \"{1}\" }} }}\n",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "17",
                    "type": "format",
                    "warnings": {},
                    "x": -1.4210854715202004e-14,
                    "y": 2052
                },
                "19": {
                    "data": {
                        "advanced": {
                            "customName": "create artifatc prompt",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "artifact_create",
                            "repoName": "community"
                        },
                        "functionId": 5,
                        "functionName": "create_artifatc_prompt",
                        "id": "19",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "artifact_create": {
                                "description": "Create a new artifact with the specified attributes. Supports all fields available in /rest/artifact. Add any unlisted inputs as dictionary keys in input_json. Unsupported keys will automatically be dropped.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "Container which the artifact will be added to.",
                                        "inputType": "item",
                                        "label": "container",
                                        "name": "container",
                                        "placeholder": "container:id",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The name of the new artifact, which is optional and defaults to \"artifact\".",
                                        "inputType": "item",
                                        "label": "name",
                                        "name": "name",
                                        "placeholder": "artifact",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The label of the new artifact, which is optional and defaults to \"events\"",
                                        "inputType": "item",
                                        "label": "label",
                                        "name": "label",
                                        "placeholder": "events",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            ""
                                        ],
                                        "description": "The severity of the new artifact, which is optional and defaults to \"Medium\". Typically this is either \"High\", \"Medium\", or \"Low\".",
                                        "inputType": "item",
                                        "label": "severity",
                                        "name": "severity",
                                        "placeholder": "Medium",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The name of the CEF field to populate in the artifact, such as \"destinationAddress\" or \"sourceDnsDomain\". Required only if cef_value is provided.",
                                        "inputType": "item",
                                        "label": "cef_field",
                                        "name": "cef_field",
                                        "placeholder": "destinationAddress",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "The value of the CEF field to populate in the artifact, such as the IP address, domain name, or file hash. Required only if cef_field is provided.",
                                        "inputType": "item",
                                        "label": "cef_value",
                                        "name": "cef_value",
                                        "placeholder": "192.0.2.192",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The CEF data type of the data in cef_value. For example, this could be \"ip\", \"hash\", or \"domain\". Optional.",
                                        "inputType": "item",
                                        "label": "cef_data_type",
                                        "name": "cef_data_type",
                                        "placeholder": "ip",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "A comma-separated list of tags to apply to the created artifact, which is optional.",
                                        "inputType": "item",
                                        "label": "tags",
                                        "name": "tags",
                                        "placeholder": "tag1, tag2, tag3",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "Either \"true\" or \"false\", depending on whether or not the new artifact should trigger the execution of any playbooks that are set to active on the label of the container the artifact will be added to. Optional and defaults to \"false\".",
                                        "inputType": "item",
                                        "label": "run_automation",
                                        "name": "run_automation",
                                        "placeholder": "false",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "Optional parameter to modify any extra attributes of the artifact. Input_json will be merged with other inputs. In the event of a conflict, input_json will take precedence.",
                                        "inputType": "item",
                                        "label": "input_json",
                                        "name": "input_json",
                                        "placeholder": "{\"source_data_identifier\": \"1234\", \"data\": \"5678\"}",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "artifact_create",
                                "name": "artifact_create"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "artifact_create": {
                                "cef_data_type": null,
                                "cef_field": null,
                                "cef_value": null,
                                "container": "container:id",
                                "input_json": "format_json_artifact_create:formatted_data",
                                "label": null,
                                "name": "url prompt",
                                "run_automation": null,
                                "severity": "Informational",
                                "tags": null
                            }
                        }
                    },
                    "errors": {},
                    "id": "19",
                    "type": "utility",
                    "warnings": {},
                    "x": 0,
                    "y": 2216
                },
                "2": {
                    "data": {
                        "advanced": {
                            "customName": "filter check if artifact name is Vault Artifact",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "artifact:*.name",
                                        "value": "Vault Artifact"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "Vault Artifact",
                                "logic": "and"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "filter_check_if_artifact_name_is_vault_artifact",
                        "id": "2",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "2",
                    "type": "filter",
                    "warnings": {},
                    "x": 230,
                    "y": 1084
                },
                "20": {
                    "data": {
                        "action": "schedule playbook",
                        "actionType": "generic",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Runner",
                        "connectorConfigs": [
                            "runner-1"
                        ],
                        "connectorId": "3f141df7-4bf2-40de-8f68-6133a2cabf11",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "schedule_playbook_1",
                        "id": "20",
                        "parameters": {
                            "container_id": "container:id",
                            "delay_duration": "5",
                            "delay_purpose": "waiting for the user's response",
                            "duration_unit": "Minutes",
                            "playbook": "is_if/check_for_replay",
                            "playbook_scope": "all"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "default": "Format: <repository>/<playbook>",
                                "field": "playbook"
                            },
                            {
                                "data_type": "string",
                                "field": "delay_purpose"
                            },
                            {
                                "data_type": "string",
                                "default": "Minutes",
                                "field": "duration_unit"
                            },
                            {
                                "data_type": "numeric",
                                "default": "5",
                                "field": "delay_duration"
                            },
                            {
                                "data_type": "string",
                                "default": "all",
                                "field": "playbook_scope"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "20",
                    "type": "action",
                    "warnings": {},
                    "x": 0,
                    "y": 2856
                },
                "21": {
                    "data": {
                        "action": "add artifact",
                        "actionType": "generic",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Phantom",
                        "connectorConfigs": [
                            "phantom"
                        ],
                        "connectorId": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "add_artifact_1",
                        "id": "21",
                        "parameters": {
                            "cef_name": "fromEmail",
                            "cef_value": "exctract_email_fromemail:custom_function_result.data.*.email_address",
                            "container_id": "container:id",
                            "label": "event",
                            "name": "fromEmail",
                            "run_automation": false,
                            "source_data_identifier": "container:source_data_identifier"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "default": "User created artifact",
                                "field": "name"
                            },
                            {
                                "data_type": "string",
                                "default": "event",
                                "field": "label"
                            },
                            {
                                "data_type": "string",
                                "field": "source_data_identifier"
                            }
                        ],
                        "tab": "byAction",
                        "type": "action"
                    },
                    "errors": {},
                    "id": "21",
                    "type": "action",
                    "warnings": {},
                    "x": 170,
                    "y": 492
                },
                "22": {
                    "data": {
                        "action": "add artifact",
                        "actionType": "generic",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Phantom",
                        "connectorConfigs": [
                            "phantom"
                        ],
                        "connectorId": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "add_artifact_2",
                        "id": "22",
                        "parameters": {
                            "cef_name": "toEmail",
                            "cef_value": "extract_email_toemail:custom_function_result.data.*.email_address",
                            "container_id": "container:id",
                            "label": "event",
                            "name": "toEmail",
                            "run_automation": false,
                            "source_data_identifier": "container:source_data_identifier"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "default": "User created artifact",
                                "field": "name"
                            },
                            {
                                "data_type": "string",
                                "default": "event",
                                "field": "label"
                            },
                            {
                                "data_type": "string",
                                "field": "source_data_identifier"
                            }
                        ],
                        "tab": "byAction",
                        "type": "action"
                    },
                    "errors": {},
                    "id": "22",
                    "type": "action",
                    "warnings": {},
                    "x": 170,
                    "y": 788
                },
                "23": {
                    "data": {
                        "advanced": {
                            "customName": "filter_Vault_Artifact",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "artifact:*.name",
                                        "value": "Vault Artifact"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "Vault Artifact",
                                "logic": "and"
                            }
                        ],
                        "functionId": 3,
                        "functionName": "filter_vault_artifact",
                        "id": "23",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "23",
                    "type": "filter",
                    "warnings": {},
                    "x": 400,
                    "y": 2580
                },
                "25": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "playbook_detonate_file_1",
                        "id": "25",
                        "inputs": {},
                        "playbookName": "detonate_file",
                        "playbookRepo": 32,
                        "playbookRepoName": "is_if",
                        "playbookType": "data",
                        "synchronous": true,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "25",
                    "type": "playbook",
                    "warnings": {},
                    "x": 340,
                    "y": 2856
                },
                "26": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "playbook_extract__DKIM_1",
                        "id": "26",
                        "inputs": {
                            "DKIM_Signatur": {
                                "datapaths": [
                                    "filtered-data:filter_email_artifact:condition_1:artifact:*.cef.emailHeaders.DKIM-Signature"
                                ],
                                "deduplicate": false
                            }
                        },
                        "playbookName": "extract_ DKIM",
                        "playbookRepo": 32,
                        "playbookRepoName": "is_if",
                        "playbookType": "data",
                        "synchronous": true,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "26",
                    "type": "playbook",
                    "warnings": {},
                    "x": 170,
                    "y": 936
                },
                "28": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "unzip_file",
                            "repoName": "is_if"
                        },
                        "functionId": 8,
                        "functionName": "unzip_file_8",
                        "id": "28",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "unzip_file": {
                                "description": "This Python script unpacks ZIP and RAR files that can be protected by an optional password. It handles a list of file paths with corresponding passwords, adds a prefix-based renaming scheme to the unzipped files and calculates their SHA256 and MD5 hash values. The results are saved in a JSON format containing the path, file name, name of the original archive and the calculated hash values. The script also supports unpacking files without a password.",
                                "fields": [
                                    {
                                        "dataTypes": [],
                                        "description": "A list of Artifat IDs. These artifacts must contain the following information: VaultID. Optionally a password.",
                                        "inputType": "list",
                                        "label": "artifact_id",
                                        "name": "artifact_id",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "container_id",
                                        "name": "container_id",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "default_tag",
                                        "name": "default_tag",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "default_severity",
                                        "name": "default_severity",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "default_label",
                                        "name": "default_label",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "unzip_file",
                                "name": "unzip_file"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "unzip_file": {
                                "artifact_id": [
                                    "filtered-data:filter_vault_artifact:condition_1:artifact:*.id"
                                ],
                                "container_id": "container:id",
                                "default_label": "container:label",
                                "default_severity": "Low",
                                "default_tag": "unpacked"
                            }
                        }
                    },
                    "errors": {},
                    "id": "28",
                    "type": "utility",
                    "warnings": {},
                    "x": 350,
                    "y": 2724.5
                },
                "3": {
                    "data": {
                        "advanced": {
                            "customName": "checks zip or tar file id password protected",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "check_if_is_password_protected",
                            "repoName": "dev"
                        },
                        "functionId": 1,
                        "functionName": "checks_zip_or_tar_file_id_password_protected",
                        "id": "3",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "check_if_is_password_protected": {
                                "description": "",
                                "fields": [
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "vault_id",
                                        "name": "vault_id",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "container_id",
                                        "name": "container_id",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "check_if_is_password_protected",
                                "name": "check_if_is_password_protected"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "check_if_is_password_protected": {
                                "container_id": [
                                    "container:id"
                                ],
                                "vault_id": "filtered-data:filter_check_if_artifact_name_is_vault_artifact:condition_1:artifact:*.cef.vaultId"
                            }
                        }
                    },
                    "errors": {},
                    "id": "3",
                    "type": "utility",
                    "warnings": {},
                    "x": 170,
                    "y": 1264
                },
                "4": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "checks_zip_or_tar_file_id_password_protected:custom_function_result.data.protected_status",
                                        "value": "yes"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "Yes",
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "customName": "no",
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "decision_1",
                        "id": "4",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "4",
                    "type": "decision",
                    "warnings": {},
                    "x": 250,
                    "y": 1428
                },
                "5": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "artifact_update",
                            "repoName": "community"
                        },
                        "functionId": 2,
                        "functionName": "artifact_update_2",
                        "id": "5",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "artifact_update": {
                                "description": "Update an artifact with the specified attributes. All parameters are optional, except that an artifact_id must be provided and if one of cef_field or cef_value is provided then they must both be provided. Supports all fields available in /rest/artifact. Add any unlisted inputs as dictionary keys in input_json. Unsupported keys will automatically be dropped.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "phantom artifact id"
                                        ],
                                        "description": "ID of the artifact to update, which is required unless artifact_id is a key within input_json",
                                        "inputType": "item",
                                        "label": "artifact_id",
                                        "name": "artifact_id",
                                        "placeholder": "1234",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "Change the name of the artifact.",
                                        "inputType": "item",
                                        "label": "name",
                                        "name": "name",
                                        "placeholder": "artifact",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            ""
                                        ],
                                        "description": "Change the label of the artifact.",
                                        "inputType": "item",
                                        "label": "label",
                                        "name": "label",
                                        "placeholder": "events",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "Change the severity of the artifact. Typically this is either \"High\", \"Medium\", or \"Low\".",
                                        "inputType": "item",
                                        "label": "severity",
                                        "name": "severity",
                                        "placeholder": "Medium",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The name of the CEF field to populate in the artifact, such as \"destinationAddress\" or \"sourceDnsDomain\". Required only if cef_value is provided.",
                                        "inputType": "item",
                                        "label": "cef_field",
                                        "name": "cef_field",
                                        "placeholder": "destinationAddress",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "The value of the CEF field to populate in the artifact, such as the IP address, domain name, or file hash. Required only if cef_field is provided.",
                                        "inputType": "item",
                                        "label": "cef_value",
                                        "name": "cef_value",
                                        "placeholder": "192.0.2.192",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The CEF data type of the data in cef_value. For example, this could be \"ip\", \"hash\", or \"domain\". Optional, but only operational if cef_field is provided.",
                                        "inputType": "item",
                                        "label": "cef_data_type",
                                        "name": "cef_data_type",
                                        "placeholder": "ip",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "A comma-separated list of tags to apply to the artifact, which is optional.",
                                        "inputType": "item",
                                        "label": "tags",
                                        "name": "tags",
                                        "placeholder": "tag1, tag2, tag3",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "Optional input. Either True or False with default as False. If set to True, existing tags on the indicator record will be replaced by the provided input. If set to False, the new tags will be appended to the existing indicator tags.",
                                        "inputType": "item",
                                        "label": "overwrite_tags",
                                        "name": "overwrite_tags",
                                        "placeholder": "True or False",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "Optional parameter to modify any extra attributes of the artifact. Input_json will be merged with other inputs. In the event of a conflict, input_json will take precedence.",
                                        "inputType": "item",
                                        "label": "input_json",
                                        "name": "input_json",
                                        "placeholder": "{\"source_data_identifier\": \"1234\", \"data\": \"5678\"}",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "artifact_update",
                                "name": "artifact_update"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "artifact_update": {
                                "artifact_id": "filtered-data:filter_check_if_artifact_name_is_vault_artifact:condition_1:artifact:*.id",
                                "cef_data_type": null,
                                "cef_field": null,
                                "cef_value": null,
                                "input_json": null,
                                "label": null,
                                "name": null,
                                "overwrite_tags": null,
                                "severity": null,
                                "tags": "pwd_protected"
                            }
                        }
                    },
                    "errors": {},
                    "id": "5",
                    "type": "utility",
                    "warnings": {},
                    "x": 0,
                    "y": 1608
                },
                "6": {
                    "data": {
                        "advanced": {
                            "customName": "format email  body ohne Passwort",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "format_email_body_ohne_passwort",
                        "id": "6",
                        "parameters": [
                            "filtered-data:filter_check_if_artifact_name_is_vault_artifact:condition_1:artifact:*.cef.fileName",
                            "exctract_email_fromemail:custom_function_result.data.*.email_address"
                        ],
                        "template": "Hallo,\n\nwir m\u00f6chten Sie dar\u00fcber informieren, dass wir eine E-Mail mit einem potenziell verd\u00e4chtigen Anhang zur\u00fcckgehalten haben. Es handelt sich um die folgende Datei:\n\nDatei Name: {0}\n\nDer Absender der E-Mail mit dem potenziell verd\u00e4chtigen Anhang, der an Sie adressiert war, lautet wie folgt:\n\nE-Mail: {1}\n\nFalls Ihnen weitere verd\u00e4chtige Aktivit\u00e4ten auffallen sollten, z\u00f6gern Sie bitte nicht, uns zu kontaktieren. Nach \u00dcberpr\u00fcfung des Inhalts werden wir Sie \u00fcber die n\u00e4chsten Schritte informieren.\n\nVielen Dank f\u00fcr Ihre Aufmerksamkeit.\n\nMit freundlichen Gr\u00fc\u00dfen\nIT-Security\n\n\n",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "6",
                    "type": "format",
                    "warnings": {},
                    "x": 340,
                    "y": 2052
                },
                "7": {
                    "data": {
                        "advanced": {
                            "customName": "filter Email Artifact",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "artifact:*.name",
                                        "value": "Email Artifact"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "Email Artifact",
                                "logic": "and"
                            }
                        ],
                        "functionId": 2,
                        "functionName": "filter_email_artifact",
                        "id": "7",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "7",
                    "type": "filter",
                    "warnings": {},
                    "x": 230,
                    "y": 148
                },
                "8": {
                    "data": {
                        "advanced": {
                            "customName": "exctract email  fromEmail",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "regex_extract_email",
                            "repoName": "community"
                        },
                        "functionId": 3,
                        "functionName": "exctract_email_fromemail",
                        "id": "8",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "regex_extract_email": {
                                "description": "Provide a string with one or more email addresses in it to be extracted.\nCan be helpful with strings from the To or CC fields of an email: \"<other_email@domain.com>, 'Name' <e-mail@domain.com>\"",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "String containing email addresses",
                                        "inputType": "item",
                                        "label": "input_string",
                                        "name": "input_string",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "regex_extract_email",
                                "name": "regex_extract_email"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "regex_extract_email": {
                                "input_string": "filtered-data:filter_email_artifact:condition_1:artifact:*.cef.fromEmail"
                            }
                        }
                    },
                    "errors": {},
                    "id": "8",
                    "type": "utility",
                    "warnings": {},
                    "x": 170,
                    "y": 327.9999999999999
                },
                "9": {
                    "data": {
                        "advanced": {
                            "customName": "format email body mit passwort",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 2,
                        "functionName": "format_email_body_mit_passwort",
                        "id": "9",
                        "parameters": [
                            "filtered-data:filter_check_if_artifact_name_is_vault_artifact:condition_1:artifact:*.cef.fileName",
                            "exctract_email_fromemail:custom_function_result.data.*.email_address",
                            "create_magic_link:action_result.data.*.web_url"
                        ],
                        "template": "Hallo,\n\nwir m\u00f6chten Sie dar\u00fcber informieren, dass wir eine E-Mail mit einem potenziell verd\u00e4chtigen Anhang zur\u00fcckgehalten haben. Es handelt sich um die folgende Datei:\n\nDatei Name: {0}\n\nBei der ersten \u00dcberpr\u00fcfung wurde festgestellt, dass der Anhang passwortgesch\u00fctzt ist. Um eine gr\u00fcndliche Pr\u00fcfung durchf\u00fchren zu k\u00f6nnen, bitten wir Sie, uns das Passwort mitzuteilen. Bitte verwenden Sie daf\u00fcr das sichere Formular, welches Sie \u00fcber den nachstehenden Link erreichen k\u00f6nnen.\n\nLink: {2}\n\nDer Absender der E-Mail mit dem potenziell verd\u00e4chtigen Anhang, der an Sie adressiert war, lautet wie folgt:\n\nE-Mail: {1}\n\nFalls Ihnen weitere verd\u00e4chtige Aktivit\u00e4ten auffallen sollten, z\u00f6gern Sie bitte nicht, uns zu kontaktieren. Nach \u00dcberpr\u00fcfung des Inhalts werden wir Sie \u00fcber die n\u00e4chsten Schritte informieren.\n\nVielen Dank f\u00fcr Ihre Aufmerksamkeit.\n\nMit freundlichen Gr\u00fc\u00dfen\nIT-Security\n",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "9",
                    "type": "format",
                    "warnings": {},
                    "x": -1.4210854715202004e-14,
                    "y": 2364
                }
            },
            "notes": ""
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.10",
        "version": "6.1.1.211"
    },
    "create_time": "2023-11-29T13:39:03.414476+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}